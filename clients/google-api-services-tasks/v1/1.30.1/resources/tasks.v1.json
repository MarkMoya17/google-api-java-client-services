{
  "basePath": "",
  "rootUrl": "https://www.googleapis.com/",
  "name": "tasks",
  "documentationLink": "",
  "baseUrl": "https://www.googleapis.com/",
  "ownerDomain": "google.com",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/tasks.readonly": {
          "description": "View your tasks"
        },
        "https://www.googleapis.com/auth/tasks": {
          "description": "Create, edit, organize, and delete all your tasks"
        }
      }
    }
  },
  "resources": {
    "tasklists": {
      "methods": {
        "insert": {
          "response": {
            "$ref": "TaskList"
          },
          "path": "tasks/v1/users/@me/lists",
          "flatPath": "tasks/v1/users/@me/lists",
          "scopes": [
            "https://www.googleapis.com/auth/tasks"
          ],
          "request": {
            "$ref": "TaskList"
          },
          "description": "Creates a new task list and adds it to the authenticated user's task lists.",
          "parameterOrder": [],
          "id": "tasks.tasklists.insert",
          "httpMethod": "POST",
          "parameters": {}
        },
        "list": {
          "id": "tasks.tasklists.list",
          "description": "Returns all the authenticated user's task lists.",
          "response": {
            "$ref": "TaskLists"
          },
          "httpMethod": "GET",
          "path": "tasks/v1/users/@me/lists",
          "parameterOrder": [],
          "flatPath": "tasks/v1/users/@me/lists",
          "scopes": [
            "https://www.googleapis.com/auth/tasks",
            "https://www.googleapis.com/auth/tasks.readonly"
          ],
          "parameters": {
            "pageToken": {
              "description": "Token specifying the result page to return. Optional.",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "description": "Maximum number of task lists returned on one page. Optional. The default is\n20 (max allowed: 100).",
              "type": "integer",
              "format": "int32",
              "location": "query"
            }
          }
        },
        "update": {
          "response": {
            "$ref": "TaskList"
          },
          "id": "tasks.tasklists.update",
          "flatPath": "tasks/v1/users/@me/lists/{tasklist}",
          "description": "Updates the authenticated user's specified task list.",
          "scopes": [
            "https://www.googleapis.com/auth/tasks"
          ],
          "parameterOrder": [
            "tasklist"
          ],
          "parameters": {
            "tasklist": {
              "type": "string",
              "description": "Task list identifier.",
              "location": "path",
              "required": true
            }
          },
          "httpMethod": "PUT",
          "request": {
            "$ref": "TaskList"
          },
          "path": "tasks/v1/users/@me/lists/{tasklist}"
        },
        "delete": {
          "scopes": [
            "https://www.googleapis.com/auth/tasks"
          ],
          "parameterOrder": [
            "tasklist"
          ],
          "description": "Deletes the authenticated user's specified task list.",
          "path": "tasks/v1/users/@me/lists/{tasklist}",
          "parameters": {
            "tasklist": {
              "required": true,
              "type": "string",
              "description": "Task list identifier.",
              "location": "path"
            }
          },
          "id": "tasks.tasklists.delete",
          "httpMethod": "DELETE",
          "flatPath": "tasks/v1/users/@me/lists/{tasklist}"
        },
        "patch": {
          "parameterOrder": [
            "tasklist"
          ],
          "response": {
            "$ref": "TaskList"
          },
          "description": "Updates the authenticated user's specified task list. This method supports\npatch semantics.",
          "id": "tasks.tasklists.patch",
          "parameters": {
            "tasklist": {
              "description": "Task list identifier.",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "request": {
            "$ref": "TaskList"
          },
          "flatPath": "tasks/v1/users/@me/lists/{tasklist}",
          "scopes": [
            "https://www.googleapis.com/auth/tasks"
          ],
          "path": "tasks/v1/users/@me/lists/{tasklist}",
          "httpMethod": "PATCH"
        },
        "get": {
          "parameterOrder": [
            "tasklist"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/tasks",
            "https://www.googleapis.com/auth/tasks.readonly"
          ],
          "path": "tasks/v1/users/@me/lists/{tasklist}",
          "parameters": {
            "tasklist": {
              "location": "path",
              "required": true,
              "description": "Task list identifier.",
              "type": "string"
            }
          },
          "httpMethod": "GET",
          "flatPath": "tasks/v1/users/@me/lists/{tasklist}",
          "description": "Returns the authenticated user's specified task list.",
          "id": "tasks.tasklists.get",
          "response": {
            "$ref": "TaskList"
          }
        }
      }
    },
    "tasks": {
      "methods": {
        "list": {
          "flatPath": "tasks/v1/lists/{tasklist}/tasks",
          "parameters": {
            "dueMax": {
              "location": "query",
              "description": "Upper bound for a task's due date (as a RFC 3339 timestamp) to filter by.\nOptional. The default is not to filter by due date.",
              "type": "string"
            },
            "pageToken": {
              "type": "string",
              "description": "Token specifying the result page to return. Optional.",
              "location": "query"
            },
            "tasklist": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Task list identifier."
            },
            "showCompleted": {
              "location": "query",
              "description": "Flag indicating whether completed tasks are returned in the result.\nOptional. The default is True.",
              "type": "boolean"
            },
            "updatedMin": {
              "type": "string",
              "description": "Lower bound for a task's last modification time (as a RFC 3339 timestamp)\nto filter by. Optional. The default is not to filter by last modification\ntime.",
              "location": "query"
            },
            "dueMin": {
              "type": "string",
              "description": "Lower bound for a task's due date (as a RFC 3339 timestamp) to filter by.\nOptional. The default is not to filter by due date.",
              "location": "query"
            },
            "showDeleted": {
              "location": "query",
              "type": "boolean",
              "description": "Flag indicating whether deleted tasks are returned in the result. Optional.\nThe default is False."
            },
            "maxResults": {
              "description": "Maximum number of task lists returned on one page. Optional. The default is\n20 (max allowed: 100).",
              "format": "int32",
              "type": "integer",
              "location": "query"
            },
            "showHidden": {
              "description": "Flag indicating whether hidden tasks are returned in the result. Optional.\nThe default is False.",
              "location": "query",
              "type": "boolean"
            },
            "completedMin": {
              "type": "string",
              "location": "query",
              "description": "Lower bound for a task's completion date (as a RFC 3339 timestamp) to\nfilter by. Optional. The default is not to filter by completion date."
            },
            "completedMax": {
              "location": "query",
              "description": "Upper bound for a task's completion date (as a RFC 3339 timestamp) to\nfilter by. Optional. The default is not to filter by completion date.",
              "type": "string"
            }
          },
          "description": "Returns all tasks in the specified task list.",
          "path": "tasks/v1/lists/{tasklist}/tasks",
          "httpMethod": "GET",
          "parameterOrder": [
            "tasklist"
          ],
          "response": {
            "$ref": "Tasks"
          },
          "scopes": [
            "https://www.googleapis.com/auth/tasks",
            "https://www.googleapis.com/auth/tasks.readonly"
          ],
          "id": "tasks.tasks.list"
        },
        "move": {
          "parameters": {
            "task": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Task identifier."
            },
            "tasklist": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "Task list identifier."
            },
            "previous": {
              "type": "string",
              "description": "New previous sibling task identifier. If the task is moved to the first\nposition among its siblings, this parameter is omitted. Optional.",
              "location": "query"
            },
            "parent": {
              "location": "query",
              "description": "New parent task identifier. If the task is moved to the top level, this\nparameter is omitted. Optional.",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/tasks"
          ],
          "description": "Moves the specified task to another position in the task list. This can\ninclude putting it as a child task under a new parent and/or move it to a\ndifferent position among its sibling tasks.",
          "parameterOrder": [
            "tasklist",
            "task"
          ],
          "httpMethod": "POST",
          "flatPath": "tasks/v1/lists/{tasklist}/tasks/{task}/move",
          "path": "tasks/v1/lists/{tasklist}/tasks/{task}/move",
          "id": "tasks.tasks.move",
          "response": {
            "$ref": "Task"
          }
        },
        "get": {
          "description": "Returns the specified task.",
          "path": "tasks/v1/lists/{tasklist}/tasks/{task}",
          "flatPath": "tasks/v1/lists/{tasklist}/tasks/{task}",
          "httpMethod": "GET",
          "id": "tasks.tasks.get",
          "parameterOrder": [
            "tasklist",
            "task"
          ],
          "response": {
            "$ref": "Task"
          },
          "parameters": {
            "tasklist": {
              "description": "Task list identifier.",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "task": {
              "required": true,
              "location": "path",
              "description": "Task identifier.",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/tasks",
            "https://www.googleapis.com/auth/tasks.readonly"
          ]
        },
        "insert": {
          "parameterOrder": [
            "tasklist"
          ],
          "httpMethod": "POST",
          "response": {
            "$ref": "Task"
          },
          "scopes": [
            "https://www.googleapis.com/auth/tasks"
          ],
          "parameters": {
            "tasklist": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Task list identifier."
            },
            "previous": {
              "description": "Previous sibling task identifier. If the task is created at the first\nposition among its siblings, this parameter is omitted. Optional.",
              "location": "query",
              "type": "string"
            },
            "parent": {
              "description": "Parent task identifier. If the task is created at the top level, this\nparameter is omitted. Optional.",
              "location": "query",
              "type": "string"
            }
          },
          "description": "Creates a new task on the specified task list.",
          "flatPath": "tasks/v1/lists/{tasklist}/tasks",
          "request": {
            "$ref": "Task"
          },
          "path": "tasks/v1/lists/{tasklist}/tasks",
          "id": "tasks.tasks.insert"
        },
        "patch": {
          "parameterOrder": [
            "tasklist",
            "task"
          ],
          "path": "tasks/v1/lists/{tasklist}/tasks/{task}",
          "id": "tasks.tasks.patch",
          "response": {
            "$ref": "Task"
          },
          "request": {
            "$ref": "Task"
          },
          "parameters": {
            "task": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Task identifier."
            },
            "tasklist": {
              "location": "path",
              "type": "string",
              "description": "Task list identifier.",
              "required": true
            }
          },
          "description": "Updates the specified task. This method supports patch semantics.",
          "scopes": [
            "https://www.googleapis.com/auth/tasks"
          ],
          "flatPath": "tasks/v1/lists/{tasklist}/tasks/{task}",
          "httpMethod": "PATCH"
        },
        "delete": {
          "description": "Deletes the specified task from the task list.",
          "flatPath": "tasks/v1/lists/{tasklist}/tasks/{task}",
          "path": "tasks/v1/lists/{tasklist}/tasks/{task}",
          "httpMethod": "DELETE",
          "parameterOrder": [
            "tasklist",
            "task"
          ],
          "id": "tasks.tasks.delete",
          "scopes": [
            "https://www.googleapis.com/auth/tasks"
          ],
          "parameters": {
            "task": {
              "location": "path",
              "description": "Task identifier.",
              "required": true,
              "type": "string"
            },
            "tasklist": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Task list identifier."
            }
          }
        },
        "clear": {
          "parameters": {
            "tasklist": {
              "location": "path",
              "description": "Task list identifier.",
              "required": true,
              "type": "string"
            }
          },
          "path": "tasks/v1/lists/{tasklist}/clear",
          "description": "Clears all completed tasks from the specified task list. The affected tasks\nwill be marked as 'hidden' and no longer be returned by default when\nretrieving all tasks for a task list.",
          "id": "tasks.tasks.clear",
          "httpMethod": "POST",
          "parameterOrder": [
            "tasklist"
          ],
          "flatPath": "tasks/v1/lists/{tasklist}/clear",
          "scopes": [
            "https://www.googleapis.com/auth/tasks"
          ]
        },
        "update": {
          "description": "Updates the specified task.",
          "id": "tasks.tasks.update",
          "flatPath": "tasks/v1/lists/{tasklist}/tasks/{task}",
          "parameterOrder": [
            "tasklist",
            "task"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/tasks"
          ],
          "httpMethod": "PUT",
          "request": {
            "$ref": "Task"
          },
          "response": {
            "$ref": "Task"
          },
          "path": "tasks/v1/lists/{tasklist}/tasks/{task}",
          "parameters": {
            "tasklist": {
              "required": true,
              "description": "Task list identifier.",
              "location": "path",
              "type": "string"
            },
            "task": {
              "type": "string",
              "description": "Task identifier.",
              "location": "path",
              "required": true
            }
          }
        }
      }
    }
  },
  "batchPath": "batch/tasks/v1",
  "version": "v1",
  "description": "The Google Tasks API lets you manage your tasks and task lists.",
  "protocol": "rest",
  "id": "tasks:v1",
  "fullyEncodeReservedExpansion": true,
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "mtlsRootUrl": "https://www.mtls.googleapis.com/",
  "parameters": {
    "prettyPrint": {
      "default": "true",
      "location": "query",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks."
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "default": "json",
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "type": "string",
      "enum": [
        "1",
        "2"
      ]
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    }
  },
  "servicePath": "",
  "schemas": {
    "Task": {
      "id": "Task",
      "properties": {
        "links": {
          "items": {
            "properties": {
              "type": {
                "type": "string",
                "description": "Type of the link, e.g. \"email\"."
              },
              "link": {
                "type": "string",
                "description": "The URL."
              },
              "description": {
                "description": "The description. In HTML speak: Everything between &lt;a&gt; and\n&lt;/a&gt;.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array",
          "description": "Collection of links. This collection is read-only."
        },
        "due": {
          "description": "Due date of the task (as a RFC 3339 timestamp). Optional. The due date only\nrecords date information; the time portion of the timestamp is discarded\nwhen setting the due date. It isn't possible to read or write the time that\na task is due via the API.",
          "type": "string"
        },
        "deleted": {
          "description": "Flag indicating whether the task has been deleted. The default is False.",
          "type": "boolean"
        },
        "status": {
          "description": "Status of the task. This is either \"needsAction\" or \"completed\".",
          "type": "string"
        },
        "selfLink": {
          "type": "string",
          "description": "URL pointing to this task. Used to retrieve, update, or delete this task."
        },
        "notes": {
          "type": "string",
          "description": "Notes describing the task. Optional."
        },
        "kind": {
          "description": "Type of the resource. This is always \"tasks#task\".",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Task identifier."
        },
        "hidden": {
          "type": "boolean",
          "description": "Flag indicating whether the task is hidden. This is the case if the task\nhad been marked completed when the task list was last cleared. The default\nis False. This field is read-only."
        },
        "etag": {
          "description": "ETag of the resource.",
          "type": "string"
        },
        "position": {
          "type": "string",
          "description": "String indicating the position of the task among its sibling tasks under\nthe same parent task or at the top level. If this string is greater than\nanother task's corresponding position string according to lexicographical\nordering, the task is positioned after the other task under the same parent\ntask (or at the top level). This field is read-only. Use the \"move\" method\nto move the task to another position."
        },
        "parent": {
          "type": "string",
          "description": "Parent task identifier. This field is omitted if it is a top-level task.\nThis field is read-only. Use the \"move\" method to move the task under a\ndifferent parent or to the top level."
        },
        "title": {
          "description": "Title of the task.",
          "type": "string"
        },
        "completed": {
          "description": "Completion date of the task (as a RFC 3339 timestamp). This field is\nomitted if the task has not been completed.",
          "type": "string"
        },
        "updated": {
          "type": "string",
          "description": "Last modification time of the task (as a RFC 3339 timestamp)."
        }
      },
      "type": "object"
    },
    "TaskLists": {
      "id": "TaskLists",
      "properties": {
        "etag": {
          "type": "string",
          "description": "ETag of the resource."
        },
        "nextPageToken": {
          "description": "Token that can be used to request the next page of this result.",
          "type": "string"
        },
        "kind": {
          "description": "Type of the resource. This is always \"tasks#taskLists\".",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "TaskList"
          },
          "description": "Collection of task lists.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "TaskList": {
      "id": "TaskList",
      "type": "object",
      "properties": {
        "etag": {
          "description": "ETag of the resource.",
          "type": "string"
        },
        "selfLink": {
          "type": "string",
          "description": "URL pointing to this task list. Used to retrieve, update, or delete this\ntask list."
        },
        "updated": {
          "type": "string",
          "description": "Last modification time of the task list (as a RFC 3339 timestamp)."
        },
        "id": {
          "description": "Task list identifier.",
          "type": "string"
        },
        "kind": {
          "description": "Type of the resource. This is always \"tasks#taskList\".",
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "Title of the task list."
        }
      }
    },
    "Tasks": {
      "id": "Tasks",
      "properties": {
        "etag": {
          "description": "ETag of the resource.",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "Task"
          },
          "description": "Collection of tasks."
        },
        "kind": {
          "type": "string",
          "description": "Type of the resource. This is always \"tasks#tasks\"."
        },
        "nextPageToken": {
          "description": "Token used to access the next page of this result.",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "title": "Tasks API",
  "revision": "20200516",
  "canonicalName": "Tasks"
}
